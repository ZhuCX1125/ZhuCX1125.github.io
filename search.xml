<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hive优化(一)</title>
    <url>/2023/07/24/Hive%E4%BC%98%E5%8C%96-%E4%B8%80/</url>
    <content><![CDATA[<blockquote>
<p>本文中仅有大题的思路，初步学习，参考用。详细的调优还需要后续遇到问题慢慢学习，我想。</p>
</blockquote>
<h1 id="1、影响Hive效率主要原因"><a href="#1、影响Hive效率主要原因" class="headerlink" title="1、影响Hive效率主要原因"></a>1、影响Hive效率主要原因</h1><ol>
<li><p>最主要是读取数据占用硬盘输入输出IO、网络传输，访问一次表，就产生一次MapReduce，就会产生一次IO</p>
</li>
<li><p>其次是大数据计算占用内存</p>
</li>
<li><p>计算逻辑相对简单，CPU占用较少</p>
</li>
</ol>
<h1 id="2、Hive问题排查与调优思路"><a href="#2、Hive问题排查与调优思路" class="headerlink" title="2、Hive问题排查与调优思路"></a>2、Hive问题排查与调优思路</h1><h2 id="查看hive性能问题"><a href="#查看hive性能问题" class="headerlink" title="查看hive性能问题"></a>查看hive性能问题</h2><ol>
<li><p>查看元数据：记录Hive数据库、表、分区、列等统计信息</p>
</li>
<li><p>查看执行计划：描述计算引擎的执行逻辑</p>
</li>
<li><p>查看YARN日志：有SQL执行完具体的量化数据</p>
</li>
</ol>
<h2 id="Hive优化方式"><a href="#Hive优化方式" class="headerlink" title="Hive优化方式"></a>Hive优化方式</h2><ol>
<li><p>优化存储：数据块、数据存储格式、分区分桶</p>
</li>
<li><p>优化执行过程：SQL优化、hint提示、set命令</p>
</li>
<li><p>优化作业调度：</p>
</li>
</ol>
<h2 id="Hive-SQL优化原则"><a href="#Hive-SQL优化原则" class="headerlink" title="Hive SQL优化原则"></a>Hive SQL优化原则</h2><p>（1-5是SQL通用原则，6开始是Hive特殊原则）</p>
<ol>
<li><p>坚持简洁的代码，随着Hive SQL语法完善，实现同样的功能，往往越简单的代码越高效</p>
</li>
<li><p>先分析数据存储情况再改代码，如存储格式、数据量、数据分布、是否倾斜</p>
</li>
<li><p>减少访问同个表次数</p>
</li>
<li><p>分步处理，不要一段脚本过于复杂</p>
</li>
<li><p>尽量用Hive SQL自带语法，如grouping set、rollup、cube</p>
</li>
<li><p>少用Reduce阶段操作：如表连接、group by、distinct、聚集函数、分析函数</p>
</li>
<li><p>少用Hint或者不用Hint</p>
</li>
<li><p>不要用索引</p>
</li>
<li><p>合理使用分区分桶</p>
</li>
<li><p>Hive适合处理宽表，适当的冗余有助于Hive的处理性能</p>
</li>
<li><p>不怕数据量大，防止数据倾斜</p>
</li>
</ol>
<blockquote>
<p>数据倾斜即指<strong>在大数据计算任务中某个处理任务的进程（通常是一个JVM 进程）被分配到的任务量过多，进程运行时间超长甚至最终失败，进而导致整个计算任务超长时间运行或者失败</strong>。</p>
</blockquote>
<h1 id="3-Hive4大组件"><a href="#3-Hive4大组件" class="headerlink" title="3 Hive4大组件"></a>3 Hive4大组件</h1><p><strong>元数据、分布式文件系统、计算引擎、资源管理和调度</strong></p>
<p><strong>元数据</strong>：记录Hive数据库、表、分区、列等统计信息</p>
<p>元数据存在MySQL的metastore库中，Hive3.0可以在Hive的sys库查询。</p>
<p><strong>数据存储</strong>：HDFS分布式文件系统</p>
<p><strong>计算引擎</strong>：MapReduce、Tez、Spark</p>
<p><strong>MapReduce</strong>：Hive2.0不再推荐使用，步骤简单，固定Map、Reduce两个操作，不灵活，计算代码量大，延迟量大</p>
<p><strong>Tez</strong>：将Map、Reduce两个操作简化为一个概念Vertex，拆分成多个组成，可以减少很多没必要步骤，允许小数据完全在内存中处理</p>
<p><strong>Spark</strong>：DAG有向无环图，高效、低延迟，提供多种接口实现计算</p>
<p><strong>作业资源调度</strong>：YARN、Mesos</p>
<p><strong>YARN</strong>：资源调度系统，可以查看Tracking URL日志链接，有SQL执行完具体的量化数据</p>
<h1 id="4-MapReduce计算引擎"><a href="#4-MapReduce计算引擎" class="headerlink" title="4 MapReduce计算引擎"></a>4 MapReduce计算引擎</h1><p>是大数据计算引擎，也是编程模型。</p>
<p>输入输出格式是键值对</p>
<p>所有作业都拆分成Map和Reduce两个步骤进行处理。</p>
<p>提供Map和Reduce两个编程接口，可以让用户在此基础上编写自己的业务代码，不用关心整个分布式计算框架的背后原理。</p>
<h2 id="MapReduce整体环节"><a href="#MapReduce整体环节" class="headerlink" title="MapReduce整体环节"></a>MapReduce整体环节</h2><p>Input-Mapper-Shuffle-Reducer-Output</p>
<p>Mapper接口：映射分散，输入输出格式为键值对，逻辑会分发到集群各个节点，读取该节点数据进行处理，最后写入本地。不移动数据，只移动计算逻辑。</p>
<p>Reducer接口：合并缩减，读取Map输出，并按相同键划分到各个Reducer任务</p>
<p>Shuffle过程：Mapper输出到Reducer输入的过程，一般表连接在这个过程。</p>
<p>Combiner接口：Map端的Reduce，逻辑同Reduce，在Map端本地计算。</p>
<h1 id="5-HiveSQL执行计划"><a href="#5-HiveSQL执行计划" class="headerlink" title="5 HiveSQL执行计划"></a>5 HiveSQL执行计划</h1><p>explain select sum(credit_amt) from tmp_cch_001;</p>
<p>explain extended select sum(credit_amt) from tmp_cch_001; –更详细执行计划</p>
<p>Hive执行计划都是预估的</p>
<p>Oracle执行计划可以提供真实的计划，即SQL实际执行完成后才获得的执行计划。</p>
<p>Hive2.0执行计划加大CBO的支持</p>
<h2 id="执行计划基本信息"><a href="#执行计划基本信息" class="headerlink" title="执行计划基本信息"></a>执行计划基本信息</h2><p>一个hvie任务包含多个阶段stage，不同stage间存在依赖关系，越复杂的查询越多stage。</p>
<p>一个stage可以是一个MapReduce任务，也可以是一个抽样、合并、limit。</p>
<p>默认一次只执行一个stage，开并行可以同时执行多个stage。</p>
<p>Stage-0：客户端读取执行计划结果</p>
<p>Map阶段操作：主要涉及select、from、where、本地group by，map join</p>
<p>Reduce阶段操作：主要涉及表连接、group by、distinct、聚集函数、分析函数</p>
<p>分区过滤：会在map上一个阶段，即在输入阶段进行路径过滤</p>
<h2 id="执行计划关键字解释"><a href="#执行计划关键字解释" class="headerlink" title="执行计划关键字解释"></a>执行计划关键字解释</h2><p>STAGE DEPENDENCIES：作业的依赖关系</p>
<p>STAGE PLANS：每个作业的详细信息</p>
<p>Map Reduce：执行引擎</p>
<p>Map Operator Tree</p>
<p>TableScan：扫描，即from</p>
<p>Statistics：统计信息，包含行数、文件大小</p>
<p>Filter Operator：行过滤，即where</p>
<p>Select Operator：列筛选，即select</p>
<p>Group By Operator：map端group by，分组聚集</p>
<p>Reduce Output Operator：map输出，即Shuffle流程，将本地相同键的值合并排序输出到Reduce</p>
<p>Reduce Operator Tree</p>
<p>Join Operator：表连接join</p>
<p>Group By Operator：Reduce端group by</p>
<p>Select Operator：输出字段</p>
<p>File Output Operator：Reduce输出文件信息</p>
<h2 id="MapReduce统计信息"><a href="#MapReduce统计信息" class="headerlink" title="MapReduce统计信息"></a>MapReduce统计信息</h2><p>Total jobs：作业数</p>
<p>Stage-Stage-n：MapReduce任务</p>
<p>Total MapReduce CPU Time Spent：程序占用CPU资源时间</p>
<p>Time taken：用户等待时间</p>
<h2 id="执行计划实例"><a href="#执行计划实例" class="headerlink" title="执行计划实例"></a>执行计划实例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">explain </span><br><span class="line">select usr_sts_cd,count(1) cnt</span><br><span class="line">from biee.tb_d_userinfo </span><br><span class="line">where start_dt&gt;=20210101</span><br><span class="line">group by usr_sts_cd</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">STAGE DEPENDENCIES:</span><br><span class="line"> Stage-1 is a root stage</span><br><span class="line"> Stage-0 depends on stages: Stage-1</span><br><span class="line"> </span><br><span class="line">STAGE PLANS:</span><br><span class="line"> Stage: Stage-1</span><br><span class="line"> Map Reduce</span><br><span class="line"> Map Operator Tree:</span><br><span class="line"> TableScan</span><br><span class="line"> alias: tb_d_userinfo</span><br><span class="line"> Statistics: Num rows: 8656238 Data size: 1129252772 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> Filter Operator</span><br><span class="line"> predicate: (start_dt &gt;= 20210101) (type: boolean)</span><br><span class="line"> Statistics: Num rows: 2885412 Data size: 376417503 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> Select Operator</span><br><span class="line"> expressions: usr_sts_cd (type: string)</span><br><span class="line"> outputColumnNames: usr_sts_cd</span><br><span class="line"> Statistics: Num rows: 2885412 Data size: 376417503 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> Group By Operator</span><br><span class="line"> aggregations: count(1)</span><br><span class="line"> keys: usr_sts_cd (type: string)</span><br><span class="line"> mode: hash0 </span><br><span class="line"> outputColumnNames: _col0, _col1</span><br><span class="line"> Statistics: Num rows: 2885412 Data size: 376417503 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> Reduce Output Operator</span><br><span class="line"> key expressions: _col0 (type: string)</span><br><span class="line"> sort order: +</span><br><span class="line">  Map-reduce partition columns: _col0 (type: string)</span><br><span class="line"> Statistics: Num rows: 2885412 Data size: 376417503 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> value expressions: _col1 (type: bigint)</span><br><span class="line"> Reduce Operator Tree:</span><br><span class="line"> Group By Operator</span><br><span class="line"> aggregations: count(VALUE._col0)</span><br><span class="line"> keys: KEY._col0 (type: string)</span><br><span class="line"> mode: mergepartial</span><br><span class="line"> outputColumnNames: _col0, _col1</span><br><span class="line"> Statistics: Num rows: 1442706 Data size: 188208751 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> Select Operator</span><br><span class="line"> expressions: _col0 (type: string), _col1 (type: bigint)</span><br><span class="line"> outputColumnNames: _col0, _col1</span><br><span class="line"> Statistics: Num rows: 1442706 Data size: 188208751 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> File Output Operator</span><br><span class="line"> compressed: false</span><br><span class="line"> Statistics: Num rows: 1442706 Data size: 188208751 Basic stats: COMPLETE Column stats: NONE</span><br><span class="line"> table:</span><br><span class="line"> input format: org.apache.hadoop.mapred.TextInputFormat</span><br><span class="line"> output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat</span><br><span class="line"> serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe</span><br><span class="line"> </span><br><span class="line"> Stage: Stage-0</span><br><span class="line"> Fetch Operator</span><br><span class="line"> limit: -1</span><br><span class="line"> Processor Tree:</span><br><span class="line"> ListSink</span><br></pre></td></tr></table></figure>

<h2 id="MapReduce实际执行实例"><a href="#MapReduce实际执行实例" class="headerlink" title="MapReduce实际执行实例"></a>MapReduce实际执行实例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Query ID = dwjixincheng_20210811151212_94f4d43b-b45b-417f-8e61-86fd1e99fcea</span><br><span class="line">Total jobs = 1</span><br><span class="line">Launching Job 1 out of 1</span><br><span class="line">Number of reduce tasks not specified. Estimated from input data size: 17</span><br><span class="line">In order to change the average load for a reducer (in bytes):</span><br><span class="line"> set hive.exec.reducers.bytes.per.reducer=&lt;number&gt;</span><br><span class="line">In order to limit the maximum number of reducers:</span><br><span class="line"> set hive.exec.reducers.max=&lt;number&gt;</span><br><span class="line">In order to set a constant number of reducers:</span><br><span class="line"> set mapreduce.job.reduces=&lt;number&gt;</span><br><span class="line">Starting Job = job_1622444551352_8842, Tracking URL = http://stbdhadoop-3001.site:8088/proxy/application_1622444551352_8842/</span><br><span class="line">Kill Command = /home/hadoop/hadoop-2.6.0-cdh5.4.0/bin/hadoop job -kill job_1622444551352_8842</span><br><span class="line">Hadoop job information for Stage-1: number of mappers: 5; number of reducers: 17</span><br><span class="line">2021-08-11 15:13:00,870 Stage-1 map = 0%, reduce = 0%</span><br><span class="line">2021-08-11 15:13:09,594 Stage-1 map = 20%, reduce = 0%, Cumulative CPU 4.8 sec</span><br><span class="line">2021-08-11 15:13:11,648 Stage-1 map = 40%, reduce = 0%, Cumulative CPU 7.87 sec</span><br><span class="line">2021-08-11 15:13:13,702 Stage-1 map = 60%, reduce = 0%, Cumulative CPU 12.57 sec</span><br><span class="line">2021-08-11 15:13:14,728 Stage-1 map = 80%, reduce = 0%, Cumulative CPU 26.22 sec</span><br><span class="line">2021-08-11 15:13:17,805 Stage-1 map = 100%, reduce = 0%, Cumulative CPU 37.35 sec</span><br><span class="line">2021-08-11 15:13:19,862 Stage-1 map = 100%, reduce = 53%, Cumulative CPU 49.57 sec</span><br><span class="line">2021-08-11 15:13:20,892 Stage-1 map = 100%, reduce = 65%, Cumulative CPU 52.35 sec</span><br><span class="line">2021-08-11 15:13:22,957 Stage-1 map = 100%, reduce = 71%, Cumulative CPU 54.12 sec</span><br><span class="line">2021-08-11 15:13:23,989 Stage-1 map = 100%, reduce = 82%, Cumulative CPU 57.66 sec</span><br><span class="line">2021-08-11 15:13:25,020 Stage-1 map = 100%, reduce = 88%, Cumulative CPU 59.41 sec</span><br><span class="line">2021-08-11 15:13:27,065 Stage-1 map = 100%, reduce = 100%, Cumulative CPU 62.81 sec</span><br><span class="line">MapReduce Total cumulative CPU time: 1 minutes 2 seconds 810 msec</span><br><span class="line">Ended Job = job_1622444551352_8842</span><br><span class="line">MapReduce Jobs Launched: </span><br><span class="line">Stage-Stage-1: Map: 5 Reduce: 17 Cumulative CPU: 62.81 sec HDFS Read: 1138329113 HDFS Write: 0 SUCCESS</span><br><span class="line">Total MapReduce CPU Time Spent: 1 minutes 2 seconds 810 msec</span><br><span class="line">OK</span><br><span class="line">Time taken: 33.815 seconds</span><br></pre></td></tr></table></figure>

<h1 id="6-Hive数据处理模式"><a href="#6-Hive数据处理模式" class="headerlink" title="6 Hive数据处理模式"></a>6 Hive数据处理模式</h1><h2 id="3种数据处理模式"><a href="#3种数据处理模式" class="headerlink" title="3种数据处理模式"></a>3种数据处理模式</h2><ul>
<li><p>过滤模式</p>
</li>
<li><p>聚合模式</p>
</li>
<li><p>连接模式</p>
</li>
</ul>
<h2 id="常用set变量设置"><a href="#常用set变量设置" class="headerlink" title="常用set变量设置"></a>常用set变量设置</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--select显示列名</span></span><br><span class="line"><span class="keyword">SET</span> hive.cli.print.header<span class="operator">=</span><span class="literal">true</span>; </span><br><span class="line"> </span><br><span class="line"><span class="comment">--会话显示当前数据库 </span></span><br><span class="line"><span class="keyword">SET</span> hive.cli.print.current.db<span class="operator">=</span><span class="literal">true</span>; </span><br><span class="line"> </span><br><span class="line"><span class="comment">--动态分区插入</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition<span class="operator">=</span><span class="literal">true</span>; <span class="comment">--开启动态分区</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition.mode<span class="operator">=</span>nonstrict; <span class="comment">--允许所有分区动态</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.max.dynamic.partitions<span class="operator">=</span><span class="number">10000</span>; <span class="comment">--每个语句可以创建的最大分区数 </span></span><br><span class="line"><span class="keyword">set</span> hive.exec.max.dynamic.partitions.pernode<span class="operator">=</span><span class="number">1000</span>; <span class="comment">--每个mapreduce任务节点可以创建的最大分区数</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">--使用spark引擎</span></span><br><span class="line"><span class="keyword">set</span> hive.execution.engine<span class="operator">=</span>spark;</span><br><span class="line"><span class="keyword">set</span> spark.eventLog.enabled<span class="operator">=</span><span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">--并行执行</span></span><br><span class="line"><span class="keyword">set</span> hive.exec.parallel<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"><span class="keyword">set</span> hive.exec.parallel.thread.number<span class="operator">=</span><span class="number">100</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">--提高聚集：Map端聚合，相当于combiner</span></span><br><span class="line"><span class="keyword">set</span> hive.map.aggr<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">--数据倾斜：为倾斜数据创建单独计划</span></span><br><span class="line"><span class="keyword">set</span> hive.optimize.skewjoin<span class="operator">=</span><span class="literal">true</span>;</span><br></pre></td></tr></table></figure>

<h2 id="union-all改成多次insert"><a href="#union-all改成多次insert" class="headerlink" title="union all改成多次insert"></a>union all改成多次insert</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tmp_cch_20210803_001 ;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tmp_cch_20210803_001 <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> start_dt,<span class="built_in">max</span>(usr_nbr) usr_nbr,<span class="string">&#x27;max&#x27;</span> type</span><br><span class="line"><span class="keyword">from</span> biee.tb_d_userinfo a</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> start_dt</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> start_dt,<span class="built_in">min</span>(usr_nbr) usr_nbr,<span class="string">&#x27;min&#x27;</span> type</span><br><span class="line"><span class="keyword">from</span> biee.tb_d_userinfo a</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> start_dt</span><br><span class="line">;</span><br><span class="line"> </span><br><span class="line"><span class="comment">--多次insert</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tmp_cch_20210803_001 ;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tmp_cch_20210803_001 </span><br><span class="line">(start_dt string</span><br><span class="line">, usr_nbr string</span><br><span class="line">)</span><br><span class="line">partitioned <span class="keyword">by</span> (type string);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition<span class="operator">=</span><span class="literal">true</span>; </span><br><span class="line"><span class="keyword">set</span> hive.exec.dynamic.partition.mode<span class="operator">=</span>nonstrict; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> biee.tb_d_userinfo</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> tmp_cch_20210803_001 <span class="keyword">partition</span>(type)</span><br><span class="line"><span class="keyword">select</span> start_dt,<span class="built_in">max</span>(usr_nbr) usr_nbr,<span class="string">&#x27;max&#x27;</span> type</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> start_dt</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">table</span> tmp_cch_20210803_001 <span class="keyword">partition</span>(type)</span><br><span class="line"><span class="keyword">select</span> start_dt,<span class="built_in">min</span>(usr_nbr) usr_nbr,<span class="string">&#x27;min&#x27;</span> type</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> start_dt</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h2 id="空值连接"><a href="#空值连接" class="headerlink" title="空值连接"></a>空值连接</h2><p>防止数据倾斜，空值替换为随机数，分散到多个reduce连接</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> a.usr_id</span><br><span class="line"> ,a.usr_nbr</span><br><span class="line"> ,b.vest_lvl1_cd</span><br><span class="line"><span class="keyword">from</span> tmp_cch_20210813_001 a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> eds.TW_GMCC_USR_VEST_MO_201806 b <span class="keyword">on</span> nvl(a.usr_nbr2,concat(<span class="string">&#x27;空&#x27;</span>,rand()))<span class="operator">=</span>b.usr_nbr</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>hive学习笔记</category>
      </categories>
      <tags>
        <tag>hive</tag>
        <tag>大数据</tag>
        <tag>调优</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Namesilo域名购买及使用教程</title>
    <url>/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="Namesilo-域名购买及使用教程"><a href="#Namesilo-域名购买及使用教程" class="headerlink" title="Namesilo 域名购买及使用教程"></a>Namesilo 域名购买及使用教程</h1><h2 id="账户注册"><a href="#账户注册" class="headerlink" title="账户注册"></a>账户注册</h2><p>进入 <a href="https://link.zhihu.com/?target=https://www.namesilo.com/?rid=d27fa32do" title="Namesilo">Namesilo</a> ，点击右上角 <strong>“Create New Account”</strong> 注册账号。</p>
<ul>
<li>为必填内容，建议如实填写；勾选 “Keep my information private” 默认使用隐私保护，保护我们的注册信息。</li>
</ul>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image__KU5x3Ku-H.png" alt="image__KU5x3Ku-H"></p>
<p>最后输入验证码，<strong>“Create New Account”</strong>，会收到验证邮件，点击链接激活完成注册。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_vROy7_A0Di.png" alt="image_vROy7_A0Di"></p>
<h2 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h2><p>激活账户并登陆，进入主页，在搜索框中输入想要注册的域名，<strong>“SEARCH”</strong>。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_xB1tcWHNkj.png" alt="image_xB1tcWHNkj"></p>
<p>勾选需要的域名后缀，<strong>“REGISTER”</strong>。如果该域名已被注册，会显示为橙色的 “Registered” 状态，绿色表示可注册。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_VrIwkCV3K7.png" alt="image_VrIwkCV3K7"></p>
<p>确认订单，设置域名续费规则、注册时长等。在 “Have a Coupon……” 处输入优惠码 <code>okoff</code> 或者 <code>go2think</code> ，点击 “Submit”应用，优惠一美元。</p>
<p>完成后点击 <strong>“CONTINUE”</strong> 进入下一步。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_nGlybwXLN1.png" alt="image_nGlybwXLN1"></p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_3YK8Ushr3s.png" alt="image_3YK8Ushr3s"></p>
<p><strong>其中：</strong></p>
<ul>
<li>NameServers：域名解析服务器设置，未确定的可以等稍后在后台设置也一样；</li>
<li>Auto-Renew：自动续费，如果决定长期使用，可以选择 Yes；</li>
<li>Privacy Setting：隐私保护，选择 “WHOIS Privacy”；</li>
<li>Set all years to：注册时长，如果是活动价格，则只能选择一年。</li>
</ul>
<h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>付款。支持支付宝、Paypal 等。支付宝付款：在右侧输入框填写支付宝绑定的邮箱，点击 <strong>“GO”</strong> 跳转扫码界面支付。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_bs3cg892At.png" alt="image_bs3cg892At"></p>
<h2 id="域名解析-x2F-设置DNS服务器"><a href="#域名解析-x2F-设置DNS服务器" class="headerlink" title="域名解析 &#x2F; 设置DNS服务器"></a>域名解析 &#x2F; 设置DNS服务器</h2><p>域名注册购买成功后，我们就可以把域名解析到服务器了。</p>
<p>这里我们可以直接使用 Namesilo 解析域名；也可以使用其它解析服务，然后更改 DNS 服务器地址。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_hdmcbrnIiA.png" alt="image_hdmcbrnIiA"></p>
<h2 id="方法二：更改-DNS-服务器地址"><a href="#方法二：更改-DNS-服务器地址" class="headerlink" title="方法二：更改 DNS 服务器地址"></a>方法二：更改 DNS 服务器地址</h2><p>如果使用的其他服务商提供的解析服务，选择 <strong>“Change Nameservers”</strong> 更改域名服务器地址。</p>
<p><img src="/2023/09/05/Namesilo%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/image_hsm_s_rQUm.png" alt="image_hsm_s_rQUm"></p>
<p>至此，已经完成了域名的注册和解析，如果网站已经搭建好了，等待解析生效后，就可以访问自己的网站了！</p>
<p>参考链接：<a href="https://zhuanlan.zhihu.com/p/33921436" title="https://zhuanlan.zhihu.com/p/33921436">https://zhuanlan.zhihu.com/p/33921436</a></p>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>域名</tag>
      </tags>
  </entry>
  <entry>
    <title>你好，这是我的首页。</title>
    <url>/2023/04/27/hello-world/</url>
    <content><![CDATA[<p>欢迎来到我的博客，这是我的第一篇文章，本网站用于记录本人成长的历程，分享我的学习经历，感谢您百忙之中进入我的博客，欢迎您的批评和指正。</p>
]]></content>
  </entry>
  <entry>
    <title>hexo配置-站点内容搜索</title>
    <url>/2023/07/23/hexo%E9%85%8D%E7%BD%AE-%E7%AB%99%E7%82%B9%E5%86%85%E5%AE%B9%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h1 id="安装-hexo-generator-searchdb"><a href="#安装-hexo-generator-searchdb" class="headerlink" title="安装 hexo-generator-searchdb"></a>安装 hexo-generator-searchdb</h1><p>在站点的根目录下执行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<h1 id="编辑-站点配置文件，新增以下内容到任意位置："><a href="#编辑-站点配置文件，新增以下内容到任意位置：" class="headerlink" title="编辑 站点配置文件，新增以下内容到任意位置："></a>编辑 站点配置文件，新增以下内容到任意位置：</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>

<p>编辑 主题配置文件，启用本地搜索功能：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<p>请注意：主题为：next</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="http://theme-next.iissnan.com/third-party-services.html#local-search">http://theme-next.iissnan.com/third-party-services.html#local-search</a></p>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo+github page搭建自己的个人博客-笔记01</title>
    <url>/2023/04/27/page%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E7%AC%94%E8%AE%B001/</url>
    <content><![CDATA[<h1 id="Hexo使用方法"><a href="#Hexo使用方法" class="headerlink" title="Hexo使用方法"></a>Hexo使用方法</h1><h2 id="1、概述"><a href="#1、概述" class="headerlink" title="1、概述"></a>1、概述</h2><p><a href="https://hexo.io/zh-cn/docs/">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p>将生成的静态网页托管的github中形成属于自己的个人博客</p>
<h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><h3 id="安装-Hexo-相当简单，只需要先安装下列应用程序即可："><a href="#安装-Hexo-相当简单，只需要先安装下列应用程序即可：" class="headerlink" title="安装 Hexo 相当简单，只需要先安装下列应用程序即可："></a>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</h3><ul>
<li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li>
<li><a href="http://git-scm.com/">Git</a></li>
</ul>
<h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="进阶安装和使用"><a href="#进阶安装和使用" class="headerlink" title="进阶安装和使用"></a>进阶安装和使用</h3><p>对于熟悉 npm 的进阶用户，可以仅局部安装 <code>hexo</code> 包。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure>

<p>安装以后，可以使用以下两种方式执行 Hexo：</p>
<ol>
<li><p><code>npx hexo &lt;command&gt;</code></p>
</li>
<li><p>将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;PATH=&quot;$PATH:./node_modules/.bin&quot;&#x27; &gt;&gt; ~/.profile</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="Node-js-版本限制"><a href="#Node-js-版本限制" class="headerlink" title="Node.js 版本限制"></a>Node.js 版本限制</h3><table>
<thead>
<tr>
<th align="left">Hexo 版本</th>
<th align="left">最低版本 (Node.js 版本)</th>
<th align="left">最高版本 (Node.js 版本)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">6.2+</td>
<td align="left">12.13.0</td>
<td align="left">latest</td>
</tr>
<tr>
<td align="left">6.0+</td>
<td align="left">12.13.0</td>
<td align="left">18.5.0</td>
</tr>
<tr>
<td align="left">5.0+</td>
<td align="left">10.13.0</td>
<td align="left">12.0.0</td>
</tr>
<tr>
<td align="left">4.1 - 4.2</td>
<td align="left">8.10</td>
<td align="left">10.0.0</td>
</tr>
<tr>
<td align="left">4.0</td>
<td align="left">8.6</td>
<td align="left">8.10.0</td>
</tr>
<tr>
<td align="left">3.3 - 3.9</td>
<td align="left">6.9</td>
<td align="left">8.0.0</td>
</tr>
<tr>
<td align="left">3.2 - 3.3</td>
<td align="left">0.12</td>
<td align="left">未知</td>
</tr>
<tr>
<td align="left">3.0 - 3.1</td>
<td align="left">0.10 或 iojs</td>
<td align="left">未知</td>
</tr>
<tr>
<td align="left">0.0.1 - 2.8</td>
<td align="left">0.10</td>
<td align="left">未知</td>
</tr>
</tbody></table>
<h2 id="2、初始化以及相关配置文件解释"><a href="#2、初始化以及相关配置文件解释" class="headerlink" title="2、初始化以及相关配置文件解释"></a>2、初始化以及相关配置文件解释</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ cd &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，您可以在此配置大部分的参数。</p>
<h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderer 已默认安装，您可以自由移除。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hexo-site&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;hexo&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-archive&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-category&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-generator-tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-ejs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-stylus&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-renderer-marked&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hexo-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.3.3&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p><a href="https://hexo.io/zh-cn/docs/writing#%E6%A8%A1%E7%89%88%EF%BC%88Scaffold%EF%BC%89">模版</a> 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold&#x2F;post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code> 文件夹之外，开头命名为 <code>_</code> (下划线)的文件 &#x2F; 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code> 文件夹，而其他文件会被拷贝过去。</p>
<h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p><a href="https://hexo.io/zh-cn/docs/themes">主题</a> 文件夹。Hexo 会根据主题来生成静态页面。</p>
<h2 id="3、相关的配置"><a href="#3、相关的配置" class="headerlink" title="3、相关的配置"></a>3、相关的配置</h2><p>在 <code>_config.yml</code> 中修改大部分的配置</p>
<h3 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>title</code></td>
<td align="left">网站标题</td>
</tr>
<tr>
<td align="left"><code>subtitle</code></td>
<td align="left">网站副标题</td>
</tr>
<tr>
<td align="left"><code>description</code></td>
<td align="left">网站描述</td>
</tr>
<tr>
<td align="left"><code>keywords</code></td>
<td align="left">网站的关键词。支持多个关键词。</td>
</tr>
<tr>
<td align="left"><code>author</code></td>
<td align="left">您的名字</td>
</tr>
<tr>
<td align="left"><code>language</code></td>
<td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td>
</tr>
<tr>
<td align="left"><code>timezone</code></td>
<td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td>
</tr>
</tbody></table>
<p>其中，<code>description</code>主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。<code>author</code>参数用于主题显示文章的作者。</p>
<h3 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h3><table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
<th align="left">默认值</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>url</code></td>
<td align="left">网址, 必须以 <code>http://</code> 或 <code>https://</code> 开头</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>root</code></td>
<td align="left">网站根目录</td>
<td align="left"><code>url&#39;s pathname</code></td>
</tr>
<tr>
<td align="left"><code>permalink</code></td>
<td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</td>
<td align="left"><code>:year/:month/:day/:title/</code></td>
</tr>
<tr>
<td align="left"><code>permalink_defaults</code></td>
<td align="left">永久链接中各部分的默认值</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>pretty_urls</code></td>
<td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"><code>pretty_urls.trailing_index</code></td>
<td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td>
<td align="left"><code>true</code></td>
</tr>
<tr>
<td align="left"><code>pretty_urls.trailing_html</code></td>
<td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td>
<td align="left"><code>true</code></td>
</tr>
</tbody></table>
<h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><table>
<thead>
<tr>
<th align="left"></th>
<th align="left"></th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">参数</td>
<td align="left">描述</td>
<td align="left">默认值</td>
</tr>
<tr>
<td align="left"><code>source_dir</code></td>
<td align="left">资源文件夹，这个文件夹用来存放内容。</td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>public_dir</code></td>
<td align="left">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td align="left"><code>public</code></td>
</tr>
<tr>
<td align="left"><code>tag_dir</code></td>
<td align="left">标签文件夹</td>
<td align="left"><code>tags</code></td>
</tr>
<tr>
<td align="left"><code>archive_dir</code></td>
<td align="left">归档文件夹</td>
<td align="left"><code>archives</code></td>
</tr>
<tr>
<td align="left"><code>category_dir</code></td>
<td align="left">分类文件夹</td>
<td align="left"><code>categories</code></td>
</tr>
<tr>
<td align="left"><code>code_dir</code></td>
<td align="left">Include code 文件夹，<code>source_dir</code> 下的子目录</td>
<td align="left"><code>downloads/code</code></td>
</tr>
<tr>
<td align="left"><code>i18n_dir</code></td>
<td align="left">国际化（i18n）文件夹</td>
<td align="left"><code>:lang</code></td>
</tr>
<tr>
<td align="left"><code>skip_render</code></td>
<td align="left">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 <code>public</code> 目录中。您可使用 <a href="https://github.com/micromatch/micromatch#extended-globbing">glob 表达式</a>来匹配路径。</td>
<td align="left"></td>
</tr>
</tbody></table>
<p>其他详细的配置请参考<a href="https://hexo.io/zh-cn/docs/configuration#%E7%9B%AE%E5%BD%95">官网</a></p>
<h2 id="4、指令"><a href="#4、指令" class="headerlink" title="4、指令"></a>4、指令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure>

<p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p>
<h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;post title with whitespace&quot;</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-p</code>, <code>--path</code></td>
<td align="left">自定义新文章的路径</td>
</tr>
<tr>
<td align="left"><code>-r</code>, <code>--replace</code></td>
<td align="left">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="left"><code>-s</code>, <code>--slug</code></td>
<td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page --path about/me &quot;About me&quot;</span><br></pre></td></tr></table></figure>

<p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p>
<h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure>

<p>生成静态文件。</p>
<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-d</code>, <code>--deploy</code></td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left"><code>-w</code>, <code>--watch</code></td>
<td align="left">监视文件变动</td>
</tr>
<tr>
<td align="left"><code>-b</code>, <code>--bail</code></td>
<td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td>
</tr>
<tr>
<td align="left"><code>-f</code>, <code>--force</code></td>
<td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td>
</tr>
<tr>
<td align="left"><code>-c</code>, <code>--concurrency</code></td>
<td align="left">最大同时生成文件的数量，默认无限制</td>
</tr>
</tbody></table>
<p>该命令可以简写为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>

<p>发表草稿。</p>
<h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>

<p>部署网站。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-g</code>, <code>--generate</code></td>
<td align="left">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<p>该命令可以简写为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>

<h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>

<p>渲染文件。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>-o</code>, <code>--output</code></td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration">迁移内容</a>。</p>
<h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure>

<p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p>
<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>
<h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>

<p>列出网站资料。</p>
<h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure>

<p>显示 Hexo 版本。</p>
<h2 id="5、写作"><a href="#5、写作" class="headerlink" title="5、写作"></a>5、写作</h2><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>您可以在命令中指定文章的布局（layout），默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p>
<h3 id="布局（Layout）"><a href="#布局（Layout）" class="headerlink" title="布局（Layout）"></a>布局（Layout）</h3><p>Hexo 有三种默认布局：<code>post</code>、<code>page</code> 和 <code>draft</code>。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 文件夹。</p>
<table>
<thead>
<tr>
<th align="left">布局</th>
<th align="left">路径</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>post</code></td>
<td align="left"><code>source/_posts</code></td>
</tr>
<tr>
<td align="left"><code>page</code></td>
<td align="left"><code>source</code></td>
</tr>
<tr>
<td align="left"><code>draft</code></td>
<td align="left"><code>source/_drafts</code></td>
</tr>
</tbody></table>
<h3 id="文件名称"><a href="#文件名称" class="headerlink" title="文件名称"></a>文件名称</h3><p>Hexo 默认以标题做为文件名称，但您可编辑 <code>new_post_name</code> 参数来改变默认的文件名称，举例来说，设为 <code>:year-:month-:day-:title.md</code> 可让您更方便的通过日期来管理文章。</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>:title</code></td>
<td align="left">标题（小写，空格将会被替换为短杠）</td>
</tr>
<tr>
<td align="left"><code>:year</code></td>
<td align="left">建立的年份，比如， <code>2015</code></td>
</tr>
<tr>
<td align="left"><code>:month</code></td>
<td align="left">建立的月份（有前导零），比如， <code>04</code></td>
</tr>
<tr>
<td align="left"><code>:i_month</code></td>
<td align="left">建立的月份（无前导零），比如， <code>4</code></td>
</tr>
<tr>
<td align="left"><code>:day</code></td>
<td align="left">建立的日期（有前导零），比如， <code>07</code></td>
</tr>
<tr>
<td align="left"><code>:i_day</code></td>
<td align="left">建立的日期（无前导零），比如， <code>7</code></td>
</tr>
</tbody></table>
<h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>刚刚提到了 Hexo 的一种特殊布局：<code>draft</code>，这种布局在建立时会被保存到 <code>source/_drafts</code> 文件夹，您可通过 <code>publish</code> 命令将草稿移动到 <code>source/_posts</code> 文件夹，该命令的使用方式与 <code>new</code> 十分类似，您也可在命令中指定 <code>layout</code> 来指定布局。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>

<p>草稿默认不会显示在页面中，您可在执行时加上 <code>--draft</code> 参数，或是把 <code>render_drafts</code> 参数设为 <code>true</code> 来预览草稿。</p>
<h3 id="模版（Scaffold）"><a href="#模版（Scaffold）" class="headerlink" title="模版（Scaffold）"></a>模版（Scaffold）</h3><p>在新建文章时，Hexo 会根据 <code>scaffolds</code> 文件夹内相对应的文件来建立文件，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo new photo &quot;My Gallery&quot;</span><br></pre></td></tr></table></figure>

<p>在执行这行指令时，Hexo 会尝试在 <code>scaffolds</code> 文件夹中寻找 <code>photo.md</code>，并根据其内容建立文章，以下是您可以在模版中使用的变量：</p>
<table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><code>layout</code></td>
<td align="left">布局</td>
</tr>
<tr>
<td align="left"><code>title</code></td>
<td align="left">标题</td>
</tr>
<tr>
<td align="left"><code>date</code></td>
<td align="left">文件建立日期</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>python进度条</title>
    <url>/2023/07/28/python%E8%BF%9B%E5%BA%A6%E6%9D%A1-alive-progress/</url>
    <content><![CDATA[<h1 id="python进度条"><a href="#python进度条" class="headerlink" title="python进度条"></a>python进度条</h1><h3 id="一、普通进度条"><a href="#一、普通进度条" class="headerlink" title="一、普通进度条"></a>一、普通进度条</h3><p><strong>示例代码</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">progress_bar</span>():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">101</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;\r&quot;</span>, end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Download progress: &#123;&#125;%: &quot;</span>.<span class="built_in">format</span>(i), <span class="string">&quot;▋&quot;</span> * (i // <span class="number">2</span>), end=<span class="string">&quot;&quot;</span>)</span><br><span class="line">        sys.stdout.flush()</span><br><span class="line">        time.sleep(<span class="number">0.05</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    progress_bar()</span><br></pre></td></tr></table></figure>

<h3 id="二、带时间的进度条"><a href="#二、带时间的进度条" class="headerlink" title="二、带时间的进度条"></a>二、带时间的进度条</h3><p>导入time模块来计算代码运行的时间，加上代码迭代进度使用格式化字符串来输出代码运行进度</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">scale = <span class="number">50</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;执行开始，祈祷不报错&quot;</span>.center(scale // <span class="number">2</span>,<span class="string">&quot;-&quot;</span>))</span><br><span class="line">start = time.perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale + <span class="number">1</span>):</span><br><span class="line">    a = <span class="string">&quot;*&quot;</span> * i</span><br><span class="line">    b = <span class="string">&quot;.&quot;</span> * (scale - i)</span><br><span class="line">    c = (i / scale) * <span class="number">100</span></span><br><span class="line">    dur = time.perf_counter() - start</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\r&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&#123;:.2f&#125;s&quot;</span>.<span class="built_in">format</span>(c,a,b,dur),end = <span class="string">&quot;&quot;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;执行结束，万幸&quot;</span>.center(scale // <span class="number">2</span>,<span class="string">&quot;-&quot;</span>))</span><br></pre></td></tr></table></figure>

<h3 id="三、TPDM-进度条"><a href="#三、TPDM-进度条" class="headerlink" title="三、TPDM 进度条"></a>三、TPDM 进度条</h3><p>这是一个专门生成进度条的工具包，可以使用pip在终端进行下载，当然还能切换进度条风格</p>
<p><strong>示例代码</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"><span class="comment"># 这里同样的，tqdm就是这个进度条最常用的一个方法</span></span><br><span class="line"><span class="comment"># 里面存一个可迭代对象</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tqdm(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">500</span>)):</span><br><span class="line">   <span class="comment"># 模拟你的任务</span></span><br><span class="line">   sleep(<span class="number">0.01</span>)</span><br><span class="line">sleep(<span class="number">0.5</span>)</span><br></pre></td></tr></table></figure>

<h3 id="四、progress-进度条"><a href="#四、progress-进度条" class="headerlink" title="四、progress 进度条"></a>四、progress 进度条</h3><p>只需要定义迭代的次数、进度条类型并在每次迭代时告知进度条即可</p>
<p>相关文档：<a href="https://pypi.org/project/progress/1.5/" title="https://pypi.org/project/progress/1.5/"><em>https://pypi.org/project/progress/1.5/</em></a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> progress.bar <span class="keyword">import</span> IncrementalBar</span><br><span class="line"></span><br><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">bar = IncrementalBar(<span class="string">&#x27;Countdown&#x27;</span>, <span class="built_in">max</span> = <span class="built_in">len</span>(mylist))</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> mylist:</span><br><span class="line">    bar.<span class="built_in">next</span>()</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    bar.finish()</span><br></pre></td></tr></table></figure>

<p>参考文章：<a href="https://www.cnblogs.com/zhuminghui/p/13985315.html" title="https://www.cnblogs.com/zhuminghui/p/13985315.html">https://www.cnblogs.com/zhuminghui/p/13985315.html</a></p>
]]></content>
      <categories>
        <category>python学习</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo 为Next主题添加评论功能</title>
    <url>/2023/07/23/%E4%B8%BANext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h1 id="1-创建账号"><a href="#1-创建账号" class="headerlink" title="1 创建账号"></a>1 创建账号</h1><p>这个评论系统是基于 LeanCloud 进行的，先去注册一个账号，点这里进行注册。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://leancloud.cn/</span><br></pre></td></tr></table></figure>

<p>点这里创建应用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://leancloud.cn/dashboard/applist.html#/newapp</span><br></pre></td></tr></table></figure>

<p>应用名看个人喜好。选择刚刚创建的应用，点击设置按钮，再点击应用Key按钮，你就能看到你的APP ID和APP KEY了：</p>
<p><img src="/2023/07/23/%E4%B8%BANext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/1.png" alt="1"></p>
<p>为了您的数据安全，请填写应用&gt;设置&gt;安全设置中的Web 安全域名，如下图：</p>
<p><img src="/2023/07/23/%E4%B8%BANext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/2.png" alt="2"></p>
<h2 id="2-配置"><a href="#2-配置" class="headerlink" title="2 配置"></a>2 配置</h2><p>修改你主题目录下的_config.yml文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="comment"># 你的 App ID</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># 你的 App Key</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier , https://github.com/xCss/Valine/wiki</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">有什么问题，欢迎留言指正与交流...</span> <span class="comment"># comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">robohash</span> <span class="comment"># gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure>

<p>发布之后，我们看一下效果如何：</p>
<p><img src="/2023/07/23/%E4%B8%BANext%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/3.png" alt="3"></p>
<h2 id="3-关闭"><a href="#3-关闭" class="headerlink" title="3 关闭"></a>3 关闭</h2><p>可以单独关闭某个页面的评论，在页面的 Front-matter 中添加 comments 字段，设为 false。比如标签页不想要评论，则在标签页面中做如下设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: xxxxxxxxx</span><br><span class="line">date: 2022-03-06 17:05:24</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure>

<h2 id="4-参考文章"><a href="#4-参考文章" class="headerlink" title="4 参考文章"></a>4 参考文章</h2><p><a href="https://cloud.tencent.com/developer/article/1481858">https://cloud.tencent.com/developer/article/1481858</a></p>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>使用github、hexo搭建自己的博客</title>
    <url>/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="使用github、hexo搭建自己的博客"><a href="#使用github、hexo搭建自己的博客" class="headerlink" title="使用github、hexo搭建自己的博客"></a>使用github、hexo搭建自己的博客</h1><h1 id="使用github、hexo搭建自己的个人博客"><a href="#使用github、hexo搭建自己的个人博客" class="headerlink" title="使用github、hexo搭建自己的个人博客"></a>使用github、hexo搭建自己的个人博客</h1><h2 id="01、环境准备"><a href="#01、环境准备" class="headerlink" title="01、环境准备"></a>01、环境准备</h2><p>在搭建Github博客之前，先准备一下环境（安装下方的顺序来安装，别弄混了）</p>
<blockquote>
<p>1.安装git<br>官方地址：<a href="https://git-scm.com/" title="https://git-scm.com/">https://git-scm.com/</a></p>
</blockquote>
<p>1、访问git官方地址，下载对应的安装包，进行安装（简单的点击下一步）。</p>
<p>2、安装好之后，鼠标右键可以看到：Git Bash Here，点击后打开了。</p>
<p>3、输入：git –version</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_tKKj9TtTX-.png" alt="image_tKKj9TtTX-"></p>
<p>出现这个说明git安装成功。</p>
<blockquote>
<p>2.安装node.js<br>官方地址：<a href="https://nodejs.org/en/download/" title="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p>
</blockquote>
<p>1、访问nodejs官方地址，下载对应的安装包，进行安装（简单的点击下一步）。</p>
<p>2、安装好之后，配置环境变量，并在终端里面输入：node -v</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_LPGHvgMuxP.png" alt="image_LPGHvgMuxP"></p>
<p>出现这个说明nodejs安装成功~</p>
<blockquote>
<p>3.安装Hexo<br>安装命令：<code>npm install hexo -g</code></p>
</blockquote>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_EK-EXoh965.png" alt="image_EK-EXoh965"></p>
<p>测试是否安装成功，命令：hexo -v</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_f-ol8XUcYt.png" alt="image_f-ol8XUcYt"></p>
<blockquote>
<p>4.安装hexo依赖<br>命令：<code>npm install --save hexo-deployer-git</code></p>
</blockquote>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_Rjr7y0lHsn.png" alt="image_Rjr7y0lHsn"></p>
<h2 id="02、git配置SSH-key"><a href="#02、git配置SSH-key" class="headerlink" title="02、git配置SSH key"></a>02、git配置SSH key</h2><p>相信看到本文的你应该听过github，并且也注册了自己的github账号，如果现在还没有的可以去github注册一个账号。</p>
<blockquote>
<p>为什么要配置SSH key？<br>目的：可以免密的将本地的源码和资源上传到github，无需要每次都输账号和密码。</p>
</blockquote>
<p>先看本地是否配置好SSH key（命令：cd ~&#x2F;.ssh）</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_0h98Vlfs0W.png" alt="image_0h98Vlfs0W"></p>
<blockquote>
<p>备注：<br>因为ssh配置好之后是保存到 c:&#x2F;用户&#x2F;Administrator&#x2F;.ssh</p>
</blockquote>
<h3 id="1-配置ssh"><a href="#1-配置ssh" class="headerlink" title="1.配置ssh"></a>1.配置ssh</h3><blockquote>
<p>先生成ssh key<br>ssh-keygen -t rsa -C “邮件地址”<br>备注：这里的邮件地址是github账号绑定的邮件地址</p>
</blockquote>
<p>输入生成命令：ssh-keygen -t rsa -C “邮件地址”后。连续回车三次即可</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_3QwHj17T50.png" alt="image_3QwHj17T50"></p>
<p>可以看到在用户文件夹下生成了一个ssh文件夹</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_ugdIEIqI00.png" alt="image_ugdIEIqI00"></p>
<p>进入到ssh文件夹，复制id_rsa.pub文件里全部内容</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+Tl7eRzTjWTOjAbIrFs8DeD3XKR+zBKCbyb5epRWiTKWoSlj3tAWdshEkAF9apajDEV1JG9krDg3/Ep9KCA+CuznhMLPlbJZbpvsm2iUOtqXkXXXXXXXXXXXXxxxxxxxxxxxxxxxxxxxxxxxxxxxxxXXXXXXAAAAB3NzaC1yc2EAA</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>接着打开github主页，点击个人设置，点击左侧的SSH and GPG keys，点击New SSH key</p>
<p>将id_rsa.pub复制的内容粘贴到key中，title随便起一个就行。</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_vD-eyX6_9M.png" alt="image_vD-eyX6_9M"></p>
<p>点击 Add SSH key</p>
<blockquote>
<p>测试是否成功：<br>ssh -T <a href="mailto:git@github.com" title="git@github.com">git@github.com</a></p>
</blockquote>
<p>输入测试命令后，接着输入yes，出现下面这个提示说明成功</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_eRJr6qxCdf.png" alt="image_eRJr6qxCdf"></p>
<p>配置账号和密码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">$ git config --<span class="keyword">global</span> user.name <span class="string">&quot;你的github用户名&quot;</span> <span class="comment">#你的github用户名</span></span><br><span class="line">$ git config --<span class="keyword">global</span> user.email <span class="string">&quot;填写你的github注册邮箱&quot;</span> <span class="comment">#填写你的github注册邮箱</span></span><br></pre></td></tr></table></figure>

<p>备注：用户名和邮箱记得改为 自己的</p>
<h2 id="03-搭建个人博客"><a href="#03-搭建个人博客" class="headerlink" title="03 搭建个人博客"></a>03 搭建个人博客</h2><h3 id="1-新建博客"><a href="#1-新建博客" class="headerlink" title="1.新建博客"></a>1.新建博客</h3><p>开始之前先介绍一下heox的基本命令</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">hexo new <span class="string">&quot;postName&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">&quot;tags&quot;</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>对应的缩写，比如：<br>hexo n &#x3D;&#x3D; hexo new<br>hexo g &#x3D;&#x3D; hexo generate</p>
</blockquote>
<p>新建一个保存博客的存放目录，比如我的是：E:\Zhu’s blog</p>
<blockquote>
<p>进入到本地博客存放目录<br>初始化 个人博客<br>命令：hexo init</p>
</blockquote>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_CkXo5S5XJJ.png" alt="image_CkXo5S5XJJ"></p>
<p>可以看到博客存放目录出现了如下内容：</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_7pDRjYfdsS.png" alt="image_7pDRjYfdsS"></p>
<h3 id="生成静态网页"><a href="#生成静态网页" class="headerlink" title="生成静态网页"></a>生成静态网页</h3><blockquote>
<p>命令：hexo g</p>
</blockquote>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_HMvDLxhYfa.png" alt="image_HMvDLxhYfa"></p>
<h3 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h3><blockquote>
<p>命令：hexo s</p>
</blockquote>
<p>报错解决：</p>
<h3 id="问题：hexo-g-报错-line-mathALL-is-not-funciton问题解决"><a href="#问题：hexo-g-报错-line-mathALL-is-not-funciton问题解决" class="headerlink" title="问题：hexo g 报错,line.mathALL is not funciton问题解决"></a>问题：hexo g 报错,line.mathALL is not funciton问题解决</h3><blockquote>
<p>原因：nodejs版本低于12</p>
</blockquote>
<blockquote>
<p>解决：两种方法</p>
</blockquote>
<blockquote>
<p>方法1）请将nodejs升级到高于12.0.0的版本</p>
</blockquote>
<blockquote>
<p>方法2）config.xml中的 highlight-&gt;enable的值从true更改为false，这样可以避免异常。</p>
</blockquote>
<p>在浏览器这访问：</p>
<p><a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p>可以看到访问没问题。</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_gHPwTIA1tJ.png" alt="image_gHPwTIA1tJ"></p>
<p>但这个只是在本地预览，接着将这个博客部署到github。</p>
<h3 id="2-部署到github"><a href="#2-部署到github" class="headerlink" title="2.部署到github"></a>2.部署到github</h3><p>新建一个github仓库</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_zZzw0LSfvJ.png" alt="image_zZzw0LSfvJ"></p>
<p>给仓库起个名称，注意！注意！注意！</p>
<blockquote>
<p>仓库名称格式： 用户名.github.io</p>
</blockquote>
<p>我的仓库名称为：sssss.github.io</p>
<p>因为这个仓库名称将作为你github博客的访问地址</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_GA6x5_B_v5.png" alt="image_GA6x5_B_v5"></p>
<p>编辑_config.yml，_ config.yml在博客存放目录下</p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_dK-DJp_v3W.png" alt="image_dK-DJp_v3W"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: git@github.com:Zss1125/ssss.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>repository仓库地址改为自己的</p>
<p>branch看自己的github仓库是master还是main，我这里是main，所以就填写main</p>
<blockquote>
<p>发布到github<br>命令：hexo d</p>
</blockquote>
<blockquote>
<p>出现问题：hexo d命令报错 ERROR Deployer not found: git<br>问题描述<br>我已经在站点配置文件中写入了：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:ZhuCX1125/ZhuCX1125.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>但是执行，hexo d报错：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure>

<blockquote>
<p>解决方案<br>这是因为没安装hexo-deployer-git插件，在站点目录下输入下面的插件安装就好了：</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<blockquote>
<p>然后在使用Hexo d命令就可以推送了。</p>
</blockquote>
<p>在浏览器访问</p>
<p><a href="https://zhucx1125.github.io/">https://zhucx1125.github.io/</a></p>
<p><img src="/2023/07/23/%E4%BD%BF%E7%94%A8github%E3%80%81hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/image_hqvv-JRSpI.png" alt="image_hqvv-JRSpI"></p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></p>
<p><a href="https://www.cnblogs.com/chenlove/p/15058170.html%3E">https://www.cnblogs.com/chenlove/p/15058170.html&gt;</a></p>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>在Hexo博客中插入图片</title>
    <url>/2023/07/22/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<h3 id="绝对路径本地引用"><a href="#绝对路径本地引用" class="headerlink" title="绝对路径本地引用"></a>绝对路径本地引用</h3><p>当Hexo项目中只用到少量图片时，可以将图片统一放在source&#x2F;images文件夹中，通过markdown语法访问它们。</p>
<p><img src="/2023/07/22/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/1.png" alt="1"></p>
<h3 id="相对路径本地引用"><a href="#相对路径本地引用" class="headerlink" title="相对路径本地引用"></a>相对路径本地引用</h3><p>图片除了可以放在统一的images文件夹中，还可以放在文章自己的目录中。文章的目录可以通过站点配置文件_config.yml来生成。</p>
<p>将_config.yml文件中的配置项post_asset_folder设为true后，执行命令$ hexo new post_name，在source&#x2F;_posts中会生成文章post_name.md和同名文件夹post_name。将图片资源放在post_name中，文章就可以使用相对路径引用图片资源了。</p>
<p><img src="/2023/07/22/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/2.png" alt="2"></p>
<h3 id="标签插件语法引用"><a href="#标签插件语法引用" class="headerlink" title="标签插件语法引用"></a>标签插件语法引用</h3><p>这种相对路径的图片显示方法在博文详情页面显示没有问题，但是在首页预览页面图片将显示不出来。如果希望<strong>图片在文章和首页中同时显示</strong>，可以使用标签插件语法。</p>
<p><img src="/2023/07/22/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/3.png" alt="3"></p>
<h3 id="HTML语法引用"><a href="#HTML语法引用" class="headerlink" title="HTML语法引用"></a>HTML语法引用</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;SpellCheck.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">title</span>=<span class="string">&quot;拼写检查工具Grammarly.&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;拼写检查工具Grammarly.&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="启用fancybox：点击查看图片大图"><a href="#启用fancybox：点击查看图片大图" class="headerlink" title="启用fancybox：点击查看图片大图"></a>启用fancybox：点击查看图片大图</h3><p>我这里使用的是Hexo的NexT主题，NexT主题中提供了fancybox的方便接口。</p>
<p>Usage：<a href="https://github.com/theme-next/theme-next-fancybox3">https://github.com/theme-next/theme-next-fancybox3</a><br>markdown用法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% img http://www.viemu.com/vi-vim-cheat-sheet.gif 600 600 &quot;点击查看大图:vi/vim-cheat-sheet&quot; %&#125;</span><br></pre></td></tr></table></figure>

<p><strong>Hexo部分图片禁用fancybox</strong></p>
<p>hexo在使用fancybox插件时，图片的效果还是很可观的，但是我们往往是不需要所有的图片都用fancybox；<br>例如：hexo next主题下，添加某些图片的时候，有些事不需要可点击的<br>修改<code>theme\next\source\js\src\utils.js</code> 红色字体部分；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">diff --git a/source/js/src/utils.js b/source/js/src/utils.js</span><br><span class="line">index 0f3704e..8516665 100644</span><br><span class="line">--- a/source/js/src/utils.js</span><br><span class="line">+++ b/source/js/src/utils.js</span><br><span class="line">@@ -11,6 +11,7 @@ NexT.utils = NexT.$u = &#123;</span><br><span class="line">       .not(&#x27;.group-picture img, .post-gallery img&#x27;)</span><br><span class="line">       .each(function() &#123;</span><br><span class="line">         var $image = $(this);</span><br><span class="line">+        if ($(this).hasClass(&#x27;nofancybox&#x27;)) return;</span><br><span class="line">         var imageTitle = $image.attr(&#x27;title&#x27;);</span><br><span class="line">         var $imageWrapLink = $image.parent(&#x27;a&#x27;);</span><br></pre></td></tr></table></figure>

<p>在img标签使用的时候加上class&#x3D;”nofancybox”即可。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img src=&quot;http://www.viemu.com/vi-vim-cheat-sheet.gif&quot; class=&quot;nofancybox&quot; /&gt;</span><br></pre></td></tr></table></figure>

<h2 id="另外比较好用的方法"><a href="#另外比较好用的方法" class="headerlink" title="另外比较好用的方法"></a>另外比较好用的方法</h2><h3 id="根目录下的-config-yml-的配置文件"><a href="#根目录下的-config-yml-的配置文件" class="headerlink" title="根目录下的 _config.yml 的配置文件"></a>根目录下的 _config.yml 的配置文件</h3><p>搜索，修改内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder:true</span><br></pre></td></tr></table></figure>

<p>然后可以将typora的路径改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./$&#123;filename&#125;</span><br></pre></td></tr></table></figure>

<p>如下图</p>
<p><img src="/2023/07/22/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/image-20231112182727223.png" alt="image-20231112182727223"></p>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
  <entry>
    <title>日常使用hexo写文章流程梳理</title>
    <url>/2023/11/12/%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/</url>
    <content><![CDATA[<h1 id="日常使用hexo写文章流程梳理"><a href="#日常使用hexo写文章流程梳理" class="headerlink" title="日常使用hexo写文章流程梳理"></a>日常使用hexo写文章流程梳理</h1><p><strong>1. 首先创建文章</strong></p>
<p>使用命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd 博客目录</span><br><span class="line">hexo n [文章名称]</span><br></pre></td></tr></table></figure>

<p><strong>2. 使用typore打开生产的文章.md文件开始编写文章</strong></p>
<p>这里主要使用.md的语法，当需要插入图片的时候，需要把typore设置成如下图的地方。</p>
<p><img src="/2023/11/12/%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/image-20231112180625831.png" alt="image-20231112180625831"></p>
<p>设置之后需要修改语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## 复制之前</span><br><span class="line">![image-20231112180625831](%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/image-20231112180625831.png)</span><br><span class="line">复制之后</span><br><span class="line">&#123;% asset_img image-20231112180625831.png %&#125;</span><br></pre></td></tr></table></figure>

<p>因此当需要插入图片的时候比较麻烦，我一般都不使用图片。</p>
<p><strong>3. 写完文章之后使用如下页面生成静态页面然后上传git</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 我们可以写成一条命令</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p><strong>4. 登录部署网站，更新内容</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://vercel.com/</span><br></pre></td></tr></table></figure>

<p>登录之后如下内容</p>
<p><img src="/2023/11/12/%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/image-20231112190856269.png" alt="image-20231112190856269"></p>
<p>进入项目，然后点击部署，可以看到刚刚上传的最新页面，</p>
<p><img src="/2023/11/12/%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/image-20231112191008812.png" alt="image-20231112191008812"></p>
<p>然后点进去，推进到生产。</p>
<p><img src="/2023/11/12/%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/image-20231112191220182.png" alt="image-20231112191220182"></p>
<p>可以看到最新页面已经到域名地址了</p>
<p><img src="/2023/11/12/%E6%97%A5%E5%B8%B8%E4%BD%BF%E7%94%A8hexo%E5%86%99%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E6%A2%B3%E7%90%86/image-20231112191346558.png" alt="image-20231112191346558"></p>
]]></content>
      <categories>
        <category>网站搭建-hexo</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>hexo</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
</search>
